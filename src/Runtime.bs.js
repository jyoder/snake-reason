// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var ListLabels = require("bs-platform/lib/js/listLabels.js");

function _execute(runtimeContext, run, stop, keyPress) {
  if (run !== undefined) {
    var runtimeContext$1 = runtimeContext;
    var runResult = Curry._1(run, keyPress);
    ListLabels.iter((function (param) {
            var runtimeContext$2 = runtimeContext$1;
            var command = param;
            switch (command.tag | 0) {
              case 0 : 
                  return Curry._1(runtimeContext$2[/* setColor */2], command[0]);
              case 1 : 
                  return Curry._1(runtimeContext$2[/* setTextAlign */3], command[0]);
              case 2 : 
                  return Curry._1(runtimeContext$2[/* setFont */4], command[0]);
              case 3 : 
                  return Curry._2(runtimeContext$2[/* fillRect */5], command[0], command[1]);
              case 4 : 
                  return Curry._2(runtimeContext$2[/* fillText */6], command[0], command[1]);
              case 5 : 
                  return Curry._1(runtimeContext$2[/* clear */7], command[0]);
              
            }
          }), runResult[/* commands */1]);
    return runResult[/* nextRun */0];
  } else if (stop !== undefined) {
    Curry._1(stop, /* () */0);
    return undefined;
  } else {
    return undefined;
  }
}

function start(runtimeContext, run) {
  var keyPress = /* record */[/* contents */undefined];
  Curry._1(runtimeContext[/* listen */1], (function (k) {
          keyPress[0] = k;
          return /* () */0;
        }));
  var run$1 = /* record */[/* contents */run];
  var stop = /* record */[/* contents */undefined];
  stop[0] = Curry._1(runtimeContext[/* start */0], (function (param) {
          run$1[0] = _execute(runtimeContext, run$1[0], stop[0], keyPress[0]);
          keyPress[0] = undefined;
          return /* () */0;
        }));
  return /* () */0;
}

exports.start = start;
/* No side effect */
