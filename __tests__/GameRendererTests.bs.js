// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Apple$Snake = require("../src/Apple.bs.js");
var Snake$Snake = require("../src/Snake.bs.js");
var GameWorld$Snake = require("../src/GameWorld.bs.js");
var GameRenderer$Snake = require("../src/GameRenderer.bs.js");

function _nextApple(param) {
  return Apple$Snake.make(/* record */[
              /* x */1,
              /* y */1
            ]);
}

var _gameWorld = GameWorld$Snake.make(/* record */[
      /* width */10,
      /* height */10
    ], /* Alive */0, Snake$Snake.make(/* record */[
          /* x */5,
          /* y */5
        ], /* Left */0), Apple$Snake.make(/* record */[
          /* x */3,
          /* y */5
        ]), _nextApple);

var _deadGameWorld = GameWorld$Snake.make(/* record */[
      /* width */10,
      /* height */10
    ], /* Dead */1, Snake$Snake.make(/* record */[
          /* x */5,
          /* y */5
        ], /* Left */0), Apple$Snake.make(/* record */[
          /* x */3,
          /* y */5
        ]), _nextApple);

Jest.describe("render", (function (param) {
        Jest.test("renders a white background", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Clear */Block.__(5, [/* White */0]), Jest.Expect[/* expect */0](List.nth(GameRenderer$Snake.render(_gameWorld), 0)));
              }));
        Jest.test("renders the snake as a green square", (function (param) {
                var commands = GameRenderer$Snake.render(_gameWorld);
                return Jest.Expect[/* toEqual */12](/* tuple */[
                            /* SetColor */Block.__(0, [/* Green */1]),
                            /* FillRect */Block.__(3, [
                                /* record */[
                                  /* x */75,
                                  /* y */75
                                ],
                                /* record */[
                                  /* width */15,
                                  /* height */15
                                ]
                              ])
                          ], Jest.Expect[/* expect */0](/* tuple */[
                                List.nth(commands, 1),
                                List.nth(commands, 2)
                              ]));
              }));
        Jest.test("renders the apple as a red square", (function (param) {
                var commands = GameRenderer$Snake.render(_gameWorld);
                return Jest.Expect[/* toEqual */12](/* tuple */[
                            /* SetColor */Block.__(0, [/* Red */2]),
                            /* FillRect */Block.__(3, [
                                /* record */[
                                  /* x */45,
                                  /* y */75
                                ],
                                /* record */[
                                  /* width */15,
                                  /* height */15
                                ]
                              ])
                          ], Jest.Expect[/* expect */0](/* tuple */[
                                List.nth(commands, 3),
                                List.nth(commands, 4)
                              ]));
              }));
        Jest.test("renders nothing extra when the snake is alive", (function (param) {
                var commands = GameRenderer$Snake.render(_gameWorld);
                return Jest.Expect[/* toEqual */12](5, Jest.Expect[/* expect */0](List.length(commands)));
              }));
        Jest.test("renders a gray background when the snake is dead", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Clear */Block.__(5, [/* Gray */3]), Jest.Expect[/* expect */0](List.nth(GameRenderer$Snake.render(_deadGameWorld), 0)));
              }));
        return Jest.test("renders an informative message when the snake is dead", (function (param) {
                      var commands = GameRenderer$Snake.render(_deadGameWorld);
                      return Jest.Expect[/* toEqual */12](/* tuple */[
                                  /* SetFont */Block.__(2, [/* Title */0]),
                                  /* SetColor */Block.__(0, [/* Black */4]),
                                  /* SetTextAlign */Block.__(1, [/* Center */0]),
                                  /* FillText */Block.__(4, [
                                      "You have died.",
                                      /* record */[
                                        /* x */75,
                                        /* y */75
                                      ]
                                    ])
                                ], Jest.Expect[/* expect */0](/* tuple */[
                                      List.nth(commands, 5),
                                      List.nth(commands, 6),
                                      List.nth(commands, 7),
                                      List.nth(commands, 8)
                                    ]));
                    }));
      }));

exports._nextApple = _nextApple;
exports._gameWorld = _gameWorld;
exports._deadGameWorld = _deadGameWorld;
/* _gameWorld Not a pure module */
