// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Snake$Snake = require("../src/Snake.bs.js");

Jest.describe("locations", (function (param) {
        return Jest.test("returns the locations a snall snake inhabits", (function (param) {
                      var snake = Snake$Snake.make(/* record */[
                            /* x */3,
                            /* y */4
                          ], /* Left */0);
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* record */[
                                    /* x */3,
                                    /* y */4
                                  ],
                                  /* [] */0
                                ], Jest.Expect[/* expect */0](Snake$Snake.locations(snake)));
                    }));
      }));

Jest.describe("grow", (function (param) {
        Jest.test("grows the snake's tail right if the tail is pointed right", (function (param) {
                var snake = Snake$Snake.make(/* record */[
                      /* x */3,
                      /* y */4
                    ], /* Left */0);
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */4,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.grow(snake))));
              }));
        Jest.test("grows the snake's tail left if the tail is pointed left", (function (param) {
                var snake = Snake$Snake.make(/* record */[
                      /* x */3,
                      /* y */4
                    ], /* Right */1);
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */2,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.grow(snake))));
              }));
        Jest.test("grows the snake's tail up if the tail is pointed up", (function (param) {
                var snake = Snake$Snake.make(/* record */[
                      /* x */3,
                      /* y */4
                    ], /* Down */3);
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */3
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.grow(snake))));
              }));
        Jest.test("grows the snake's tail down if the tail is pointed down", (function (param) {
                var snake = Snake$Snake.make(/* record */[
                      /* x */3,
                      /* y */4
                    ], /* Up */2);
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */5
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.grow(snake))));
              }));
        return Jest.test("grows from the end of a long snake's tail", (function (param) {
                      var snake = Snake$Snake.make(/* record */[
                            /* x */3,
                            /* y */4
                          ], /* Up */2);
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* record */[
                                    /* x */3,
                                    /* y */4
                                  ],
                                  /* :: */[
                                    /* record */[
                                      /* x */3,
                                      /* y */5
                                    ],
                                    /* :: */[
                                      /* record */[
                                        /* x */3,
                                        /* y */6
                                      ],
                                      /* [] */0
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.grow(Snake$Snake.grow(snake)))));
                    }));
      }));

Jest.describe("move", (function (param) {
        Jest.test("advances the tail left if it is pointed right", (function (param) {
                var snake = Snake$Snake.grow(Snake$Snake.make(/* record */[
                          /* x */3,
                          /* y */4
                        ], /* Left */0));
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */2,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.move(snake, /* Left */0))));
              }));
        Jest.test("advances the tail right if it is pointed left", (function (param) {
                var snake = Snake$Snake.grow(Snake$Snake.make(/* record */[
                          /* x */3,
                          /* y */4
                        ], /* Right */1));
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */4,
                              /* y */4
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.move(snake, /* Right */1))));
              }));
        Jest.test("advances the tail up if it is pointed down", (function (param) {
                var snake = Snake$Snake.grow(Snake$Snake.make(/* record */[
                          /* x */3,
                          /* y */4
                        ], /* Right */1));
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */3
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.move(snake, /* Up */2))));
              }));
        Jest.test("advances the tail down if it is pointed up", (function (param) {
                var snake = Snake$Snake.grow(Snake$Snake.make(/* record */[
                          /* x */3,
                          /* y */4
                        ], /* Down */3));
                return Jest.Expect[/* toEqual */12](/* :: */[
                            /* record */[
                              /* x */3,
                              /* y */5
                            ],
                            /* :: */[
                              /* record */[
                                /* x */3,
                                /* y */4
                              ],
                              /* [] */0
                            ]
                          ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.move(snake, /* Down */3))));
              }));
        return Jest.test("prevents the snake from moving back on itself", (function (param) {
                      var snake = Snake$Snake.grow(Snake$Snake.make(/* record */[
                                /* x */3,
                                /* y */4
                              ], /* Down */3));
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* record */[
                                    /* x */3,
                                    /* y */5
                                  ],
                                  /* :: */[
                                    /* record */[
                                      /* x */3,
                                      /* y */4
                                    ],
                                    /* [] */0
                                  ]
                                ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.move(snake, /* Up */2))));
                    }));
      }));

Jest.describe("moveForward", (function (param) {
        return Jest.test("advances the snake in the opposite direction as the head", (function (param) {
                      var snake = Snake$Snake.make(/* record */[
                            /* x */3,
                            /* y */4
                          ], /* Left */0);
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* record */[
                                    /* x */2,
                                    /* y */4
                                  ],
                                  /* [] */0
                                ], Jest.Expect[/* expect */0](Snake$Snake.locations(Snake$Snake.moveForward(snake))));
                    }));
      }));

/*  Not a pure module */
